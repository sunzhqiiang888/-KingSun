MVC:
    M   Model       模型        数据
    V   View        视图        静态页面
    C   Controller  控制器      控制数据如何与静态页面结合

    MVC是设计模式, 指导分层架构的方法, 实现软件的前后端分离


Web框架(基于MVC 面向对象 封装思想):
    HTTP请求封装(Request)
    HTTP响应封装(Response)
        普通响应
        错误响应
        重定向
        静态文件的响应
        AJAX响应(JSON)
    URL统一调度分发(Route)
    异常处理
        调试模式
            将所有错误输出到网页
        非调试模式
            将所有错误输出到文件中, 并且网页显示友好的错误提示
    公共代码
    配置管理(将所有立即数进行可配置)
        项目根目录下的index.py里的CONFIG为主配置信息
        当访问应用时对应会加载应用的子配置信息
    控制器
    模板(前后端分离手段)
    缓存机制
    模型(MySQL操作封装)
    Cookie&Session

